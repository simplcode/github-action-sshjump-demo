# Repository Secrets
#  TEST_HOST1_PVT: api-test1 private ip address
#  TEST_HOST2_PVT: api-test2 private ip address
#  TEST_HOST_KEY: api server 접속용 ssh private key
#  USERNAME: api servers' ssh 접속용 username
#  PROXY_HOST: ssh1 (ssh bastion server) public ip address
#  PROXY_KEY: ssh1 server private key
#  PROXY_USERNAME: ssh1 ssh 접속용 username
#  SLACK_WEBHOOK_URL: slack CICD app webhook url


name: Stage - Build & Deploy API

on:
  workflow_dispatch:
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2
        name: Checkout Repository

      - uses: actions/setup-java@v2
        name: Set up JDK 11
        with:
          java-version: '11'
          distribution: 'adopt'

      - uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
        name: Validate Gradle wrapper

      - run: ./gradlew bootJar
        name: Build with Gradle

      - name: List directories
        shell: bash
        run: |
          ls -al ./build/libs/       

      - name: Upload Jar
        uses: actions/upload-artifact@v2
        with:
          name: spring-boot
          path: build/libs/demo-api-1.0.0.jar
          retention-days: 1

        # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
      - run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
        name: Cleanup Gradle Cache

      - uses: appleboy/ssh-action@v0.1.4
        name: Kill Spring Boot Application
        with:
          host: ${{ secrets.TEST_HOST1_PVT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.TEST_HOST_KEY }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          script: |
            if [ -e "pid.file" ]; then
              kill $(cat ./pid.file)
            fi

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.

  deploy-1st:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - name: Download Jar
        uses: actions/download-artifact@v2
        with:
          name: spring-boot

      - name: check dir
        shell: bash
        run: |
          pwd
          ls -al

      - name: SCP Files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.TEST_HOST1_PVT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.TEST_HOST_KEY }}
          source: "demo-api-1.0.0.jar"
          target: "build"
          rm: true
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.

  launch-1st:
    runs-on: ubuntu-latest
    needs: deploy-1st

    steps:

      - uses: appleboy/ssh-action@v0.1.4
        name: Run the application
        with:
          host: ${{ secrets.TEST_HOST1_PVT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.TEST_HOST_KEY }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          script: |
            nohup java -jar build/demo-api-1.0.0.jar --spring.profiles.active=stage > app.out 2> app.err < /dev/null &
            nohup echo $! > ./pid.file &

      - uses: appleboy/ssh-action@v0.1.4
        name: Check App1 Health
        with:
          host: ${{ secrets.TEST_HOST1_PVT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.TEST_HOST_KEY }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          script: |
            sleep 60s
            export RES_CODE=$(curl -o /dev/null -w "%{http_code}" "http://localhost:8080/")
            if [ $RES_CODE -eq 200 ]; then
              exit 0
            else
              exit 1
            fi

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.

  prepare-2nd:
    runs-on: ubuntu-latest
    needs: launch-1st
    steps:
      - uses: appleboy/ssh-action@v0.1.4
        name: Kill Spring Boot Application
        with:
          host: ${{ secrets.TEST_HOST2_PVT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.TEST_HOST_KEY }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          script: |
            if [ -e "pid.file" ]; then
              kill $(cat ./pid.file)
            fi

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.

  deploy-2nd:
    runs-on: ubuntu-latest
    needs: prepare-2nd
    steps:

      - name: Download Jar
        uses: actions/download-artifact@v2
        with:
          name: spring-boot

      - name: check dir
        shell: bash
        run: |
          pwd
          ls -al

      - name: SCP Files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.TEST_HOST2_PVT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.TEST_HOST_KEY }}
          source: "demo-0.0.1-SNAPSHOT.jar"
          target: "build"
          rm: true
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.

  launch-2nd:
    runs-on: ubuntu-latest
    needs: deploy-2nd

    steps:
      - uses: appleboy/ssh-action@v0.1.4
        name: Run the application
        with:
          host: ${{ secrets.TEST_HOST2_PVT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.TEST_HOST_KEY }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          script: |
            nohup java -jar build/demo-api-1.0.0.jar --spring.profiles.active=stage > app.out 2> app.err < /dev/null &
            nohup echo $! > ./pid.file &

      - uses: appleboy/ssh-action@v0.1.4
        name: Check App2 Health
        with:
          host: ${{ secrets.TEST_HOST2_PVT }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.TEST_HOST_KEY }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USERNAME }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          script: |
            sleep 60s
            export RES_CODE=$(curl -o /dev/null -w "%{http_code}" "http://localhost:8080/")
            if [ $RES_CODE -eq 200 ]; then
              exit 0
            else
              exit 1
            fi

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.